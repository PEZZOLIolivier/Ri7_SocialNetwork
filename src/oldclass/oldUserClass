class User
{
    private $conn;
    private $table = 'user';

    public $id;
    public $email;
    public $username;
    public $password;

    public function __construct($db)
    {
        $this->conn = $db;
    }

    public function login()
    {
        if (isset($_POST['username']) && isset($_POST['password'])) {
            $username = $_POST['username'];
            $password = $_POST['password'];

            $sql = "SELECT * FROM user WHERE username = :username";
            $stmt = $this->conn->prepare($sql);
            $stmt->execute(['username' => $username]);
            $user = $stmt->fetch();

            if ($user && password_verify($password, $user['password'])) {
                session_start();
                $_SESSION['user_id'] = $user['id'];
            } else {
            }
        }
    }

    public function register() {
        try {

            // Préparation de la requête SQL pour insérer un nouvel utilisateur
            $sql = "INSERT INTO user (email, username, password) VALUES (:email, :username, :password)";
            $stmt = $this->conn->prepare($sql);
    
            // Liaison des valeurs
            $stmt->bindParam(':email', $this->email);
            $stmt->bindParam(':username', $this->username);
            $stmt->bindParam(':password', $this->password);

            var_dump($this->username);

            // Exécution de la requête
            $success = $stmt->execute();
    
            // Vérification du succès de l'opération d'insertion
            if ($success) {
                echo "vous êtes connecté";
                // Si l'insertion réussit, retourne vrai
                return true;
            } else {
                // Si l'insertion échoue, affiche l'erreur
                $errorInfo = $stmt->errorInfo();
                echo "Error: " . $errorInfo[2];
                return false;
            }
        } catch (PDOException $e) {
            // En cas d'erreur, affiche le message d'erreur
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Getter et setter
    public function getEmail() {
        return $this->email;
    }

    public function setEmail($email) {
        $this->email = $email;
    }

    public function getUsername() {
        return $this->username;
    }

    public function setUsername($username) {
        $this->username = $username;
    }

    public function getPassword() {
        return $this->password;
    }

    public function setPassword($password) {
        $this->password = $password;
    }

    
}